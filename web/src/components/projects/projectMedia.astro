---
const { mediaArray } = Astro.props;
import { Image } from "astro:assets";
---

<div>
  {
    mediaArray.map((entry) => {
      if (entry.nestedMediaArray.length > 1) {
        // if the entry has more than one item, render a carousel
        return (
          <section class="embla">
            <div class="embla__viewport">
              <div class="embla__container">
                {entry.nestedMediaArray.map((item) => {
                  return (
                    <>
                      {(item.imageSrc || item.nestedVideo) !== null && (
                        <div class="project-media-item__wrapper embla__slide">
                          {item.imageSrc !== null ? (
                            <Image
                              class="project-media-image"
                              src={item.imageSrc}
                              height="1200"
                              width="1920"
                              quality="70"
                              alt=""
                            />
                          ) : (
                            <video
                              preload="metadata"
                              autoplay="true"
                              loop="true"
                              muted="true"
                              playsinline
                            >
                              <source type="video/mp4" src={item.nestedVideo} />
                            </video>
                          )}
                        </div>
                      )}
                    </>
                  );
                })}
              </div>
            </div>
            <button class="embla__button embla__button--prev" />
            <button class="embla__button embla__button--next" />
            <div class="embla__controls">
              <div class="embla__dots" />
            </div>
          </section>
        );
      } else {
        // else render a single image
        return entry.nestedMediaArray.map((item, i) => {
          return (
            <>
              {(item.imageSrc || item.nestedVideo) !== null && (
                <div class="project-media-item__wrapper">
                  {item.imageSrc !== null ? (
                    <Image
                      class="project-media-image"
                      src={item.imageSrc}
                      height="1200"
                      width="1920"
                      quality="70"
                      alt=""
                    />
                  ) : (
                    <video
                      preload="metadata"
                      autoplay="true"
                      loop="true"
                      muted="true"
                      playsinline
                    >
                      <source type="video/mp4" src={item.nestedVideo} />
                    </video>
                  )}
                </div>
              )}
            </>
          );
        });
      }
    })
  }
</div>

<style is:global lang="scss">
  .project-media-item__wrapper {
    object-fit: cover;
    /* height: 100%; */
    width: 100%;
    /* overflow-x: hidden; */
    margin: 0rem auto;
    padding-bottom: 1rem;
    border-radius: 20px;
    position: relative;
    /* max-height: 90vh; */
    height: 90vh;

    video,
    .project-media-image {
      /* border: 1px solid red; */
      border-radius: 20px;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  .project-media-item__wrapper:last-child {
    padding-bottom: 0;
  }

  .embla {
    position: relative;
    height: 100%;
  }
  .embla__viewport {
    cursor: grab;
    overflow: hidden;
  }
  .embla__container {
    backface-visibility: hidden;
    display: flex;
    touch-action: pan-y pinch-zoom;
  }
  .embla__slide {
    flex: 0 0 100%;
    min-width: 0;
    margin-right: 1rem;
    position: relative;
  }

  .embla__controls {
    display: flex;
    justify-content: center;
    align-items: center;
    grid-template-columns: auto 1fr;
    justify-content: space-between;
    gap: 1.2rem;
    position: absolute;
    bottom: 2.5rem;
    left: 50%;
    transform: translateX(-50%);
    width: 50%;
  }
  .embla__button {
    position: absolute;
    top: 0;
    bottom: 0;
    width: 50%;
    height: 100%;
    background: transparent;
    border: none;
    cursor: none;
    touch-action: manipulation;
    z-index: 1;
  }

  .embla__button--prev {
    left: 0;
  }

  .embla__button--next {
    right: 0;
  }
  .embla__dots {
    width: 100%;
    max-width: 80vw;
    margin: 0 auto;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 2rem;
  }
  .embla__dot {
    -webkit-tap-highlight-color: rgba(var(--rgb-white), 0.5);
    -webkit-appearance: none;
    appearance: none;
    background-color: transparent;
    touch-action: manipulation;
    display: inline-flex;
    text-decoration: none;
    cursor: pointer;
    border: none;
    /* padding: 1rem 0; */
    width: auto;
    height: 2px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(var(--rgb-white), 0.5);
    transition: 0.25s all ease;
    flex: 1;
    max-width: 150px;
  }
  .embla__dot:after {
    height: 2rem;
    width: 100%;
    display: flex;
    align-items: center;
    content: "";
  }
  .embla__dot--selected {
    background: rgba(var(--rgb-white), 1);
  }

  @media (max-width: 768px) {
    .embla__button {
      display: none;
    }
    .embla__controls {
      bottom: 1.75rem;
    }
    .project-media-item__wrapper {
      height: auto;
      margin-top: 0.5rem;
    }
  }
  @media (max-width: 576px) {
    .embla__controls {
      width: 90vw;
    }
    .project-media-item__wrapper {
      border-radius: 5px;

      video {
        border-radius: 5px;
      }
      .project-media-image {
        border-radius: 5px;
        /* height: 50vh; */
      }
    }
    .embla__dots {
      max-width: 60vw;
      gap: 0.25rem;
    }
    .embla__dot {
    }
  }
</style>

<script>
  import EmblaCarousel from "embla-carousel";
  import { addDotBtnsAndClickHandlers } from "../../components/utils/emblaCarouselDotButton.js";

  const OPTIONS = { containScroll: false, loop: true };

  const emblaNodes = document.querySelectorAll(".embla");

  emblaNodes.forEach((emblaNode) => {
    const viewportNode = emblaNode.querySelector(".embla__viewport");
    const prevBtnNode = emblaNode.querySelector(".embla__button--prev");
    const nextBtnNode = emblaNode.querySelector(".embla__button--next");
    const dotsNode = emblaNode.querySelector(".embla__dots");

    const emblaApi = EmblaCarousel(viewportNode, OPTIONS);

    const removePrevNextBtnsClickHandlers = addPrevNextBtnsClickHandlers(
      emblaApi,
      prevBtnNode,
      nextBtnNode
    );
    const removeDotBtnsAndClickHandlers = addDotBtnsAndClickHandlers(
      emblaApi,
      dotsNode
    );

    emblaApi.on("destroy", removePrevNextBtnsClickHandlers);
    emblaApi.on("destroy", removeDotBtnsAndClickHandlers);
  });

  function addPrevNextBtnsClickHandlers(emblaApi, prevBtn, nextBtn) {
    const handlePrevClick = () => emblaApi.scrollPrev();
    const handleNextClick = () => emblaApi.scrollNext();
    prevBtn.addEventListener("click", handlePrevClick);
    nextBtn.addEventListener("click", handleNextClick);

    return () => {
      prevBtn.removeEventListener("click", handlePrevClick);
      nextBtn.removeEventListener("click", handleNextClick);
    };
  }
</script>
