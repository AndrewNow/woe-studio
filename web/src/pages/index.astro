---
import Layout from "../layouts/Layout.astro";
import Hero from "../components/hero.astro";
import { getPreviewClips, getSiteSettings } from "../sanity/api";
import HomepageLayout from "../layouts/HomepageLayout.astro";

const previewData = await getPreviewClips();
const settingsData = await getSiteSettings();
---

<HomepageLayout
  homepageNav={true}
  title="WOE Studio"
  data={settingsData}
  description="WOE (What On Earth) | Innovative Creative Studio Specializing in Video Production. We push the boundaries of conventional taste to deliver powerful, impactful visuals."
>
  <div class="landing-loader" id="loaderWrapper">
    <div class="lottie-container"></div>
  </div>
  <Hero data={previewData.projects} />
</HomepageLayout>

<style lang="scss">
  .hero {
    color: white;
  }
  .lottie-container {
    width: 230px;
    //width: 115px;
    // height: 250px;
    height: auto;
    color: white;
    // border: 1px solid red;
    margin: 0 auto; /* This centers the container horizontally */
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    transition: opacity 0.5s ease;
  }
  .landing-loader {
    position: absolute;
    z-index: 999999;
    top: 0;
    left: 0;
    width: 100%;
    height: 100svh;
    overflow: hidden;
    display: grid;
    place-items: center;
    pointer-events: none;
  }
  .landing-loader-video {
    height: 100%;
    width: 100%;
    object-fit: cover;
    opacity: 0;
    transition: all 0.25s ease;
  }
  .lottie-container.fade-out {
    animation: fadeOut 0.55s ease-in-out forwards;
  }
  @keyframes fadeOut {
    from {
      opacity: 1;
      transform: translateY(0px);
    }
    to {
      opacity: 0;
      transform: translateY(6px);
    }
  }
</style>
<script>
  import { animate } from "motion";
  import lottie from "lottie-web";
  const lottieContainer = document.querySelector(".lottie-container");
  const loaderWrapper = document.getElementById("loaderWrapper");
  const videoContainer = document.getElementById("hero-video-container");
  const timerItems = document.getElementById("animateTimerIn");
  const userHasVisited = sessionStorage.getItem("visited");
  const navWrapper = document.querySelector(".wrap-homepage-nav");

  let animation;

  const hideLoader = () => {
    lottieContainer.classList.add("fade-out");
    lottieContainer.addEventListener(
      "animationend",
      () => {
        lottieContainer.style.display = "none";
        if (animation) {
          animation.stop();
        }
      },
      { once: true }
    );
  };

  try {
    animation = lottie.loadAnimation({
      container: lottieContainer,
      renderer: "svg",
      loop: true,
      autoplay: true,
      path: "/lottie.json",
    });
  } catch (error) {
    console.error(`Error loading Lottie animation`);
  }

  // if user has been on this page before, don't display the loader and animate hero as usual
  if (userHasVisited) {
    loaderWrapper.style.display = "none";
    animate(
      navWrapper,
      {
        opacity: 1,
      },
      {
        duration: 1,
      }
    );
    animate(
      videoContainer,
      {
        clipPath: "inset(0% 0% 0% 0%)",
      },
      {
        duration: 1.6,
        easing: [0.85, 0, 0.15, 1],
      }
    );
    animate(
      timerItems,
      {
        opacity: 1,
      },
      {
        delay: 0.5,
        duration: 1.6,
      }
    );
  } else {
    // else show the loader and wait for the video to end
    lottieContainer.style.opacity = "1";
    handleAnimationComplete();
  }

  function handleAnimationComplete() {
    sessionStorage.setItem("visited", "true");
    setTimeout(() => {
      hideLoader();
      animate(
        navWrapper,
        {
          opacity: 1,
        },
        {
          duration: 1,
        }
      );
      animate(
        timerItems,
        {
          opacity: 1,
        },
        {
          delay: 0.5,
          duration: 1.6,
        }
      );
      animate(
        videoContainer,
        {
          clipPath: "inset(0% 0% 0% 0%)",
        },
        {
          duration: 1.6,
          easing: [0.9, 0.1, 0.2, 1],
        }
      ).finished.then(() => (loaderWrapper.style.display = "none"));
    }, 3400);
  }
</script>
