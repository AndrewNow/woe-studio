---
import { Image } from "astro:assets";
import Layout from "../../layouts/Layout.astro";
import { getProjectsInOrder, getSiteSettings } from "../../sanity/api";
import CornerTopLeft from "../../components/cornerPieces/cornerTopLeft.astro";
import CornerTopRight from "../../components/cornerPieces/cornerTopRight.astro";
import CornerBottomLeft from "../../components/cornerPieces/cornerBottomLeft.astro";
import CornerBottomRight from "../../components/cornerPieces/cornerBottomRight.astro";
import Footer from "../../components/footer.astro";
import PageTransition from "../../components/pageTransition.astro";

const allProjectData = await getProjectsInOrder();
const settingsData = await getSiteSettings();

const data = allProjectData.projects;
---

<Layout
  title="Projects | WOE Studio"
  data={settingsData}
  description="Explore the Projects page of WOE (What On Earth). Discover our portfolio showcasing select projects from captivating commercials to compelling documentaries, see how our unique approach transforms ideas into impactful visuals."
>
  <PageTransition />

  <!-- SVG symbol definition (moved outside the loop) -->
  <svg style="display: none;">
    <symbol id="video-placeholder" viewBox="0 0 24 24">
      <rect width="24" height="24" fill="#2c2c2c"></rect>
      <path
        d="M12 7c.55 0 1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"
        fill="#ffffff"></path>
    </symbol>
  </svg>

  <div class="project-grid__container">
    <div class="project-entries-container">
      {
        data.map((data, i) => {
          const className =
            i % 5 === 0
              ? "project-entry__double-column"
              : "project-entry__wrapper";
          return (
            <a
              class={`project-entry ${className}`}
              style={{ color: "white" }}
              href={`/projects/${data.slug}`}
            >
              <div class="loader" />
              <div
                class="video-container hover-area"
                data-hover-text="View project"
              >
                <video
                  class="project-video-media"
                  preload="metadata"
                  autoplay
                  loop
                  muted
                  playsinline
                >
                  <source data-src={data.previewUrl} type="video/mp4" />
                  Your browser does not support the video tag.
                </video>
              </div>
              <Image
                src={data.thumbnail}
                alt=""
                width={i % 5 === 0 ? 410 : 510}
                height={i % 5 === 0 ? 234 : 297}
                quality="75"
                class="project-image-media__mobile"
              />
              <div class="project-text">
                <span class="project-titleset">
                  {data.clientArray !== null && <p>{data.clientArray[0]}</p>}
                  <p>{data.title}</p>
                </span>
                <span class="project-titleset titleset-services">
                  <p>{data.servicesArray ? data.servicesArray[0] : null}</p>
                </span>
              </div>
            </a>
          );
        })
      }
    </div>
    <CornerTopLeft />
    <CornerTopRight />
    <CornerBottomLeft />
    <CornerBottomRight />
  </div>
  <Footer data={settingsData} />
</Layout>

<script>
  const videos = document.querySelectorAll(".project-video-media");
  const mobileImages = document.querySelectorAll(
    ".project-image-media__mobile"
  );

  videos.forEach((video) => {
    // video.load();
    if (window.innerWidth > 992) {
      video.addEventListener("loadeddata", () => {
        const loader = video.previousElementSibling;
        if (loader && loader.classList.contains("loader")) {
          loader.classList.add("fade-out");
          loader.addEventListener("animationend", () => {
            loader.style.display = "none";
          });
        }
      });
    }
    const lazyLoadVideo = (video) => {
      const source = video.querySelector("source");
      source.src = source.dataset.src;
      video.load();
    };

    const observer = new IntersectionObserver((entries, observer) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          lazyLoadVideo(entry.target);
          observer.unobserve(entry.target);
        }
      });
    });

    videos.forEach((video) => {
      observer.observe(video);
    });
    video.addEventListener("mouseenter", () => {
      video.play();
    });
    video.addEventListener("mouseleave", () => {
      video.pause();
    });
  });

  // Apply loader for images on mobile
  if (window.innerWidth <= 992) {
    const images = document.querySelectorAll(".project-image-media__mobile");

    images.forEach((image) => {
      // Get the loader within the same parent container
      const loader = image.parentNode.querySelector(".loader");

      // Show the loader initially
      loader.style.display = "block";

      // Add event listener for image loading
      image.addEventListener("load", () => {
        loader.classList.add("fade-out"); // Trigger the fade-out animation
        loader.addEventListener("animationend", () => {
          loader.style.display = "none"; // Hide the loader after fade-out
        });
      });
    });
  }
</script>

<style lang="scss">
  .video-container {
    position: relative;
    width: 100%;
    height: 100%;
    border-radius: 20px;
    overflow: hidden;
    cursor: none;
  }

  .loader {
    position: absolute;
    z-index: 1;
    height: 12px;
    width: 60px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    --c: no-repeat linear-gradient(#fff 0 0);
    background: var(--c), var(--c), var(--c), var(--c);
    background-size: 26% 1px;
    animation: l8 1s infinite;
    opacity: 1;
    transition: opacity 0.5s ease-out;
  }

  .loader.fade-out {
    animation: fadeOut 0.5s ease-out forwards;
  }

  @keyframes fadeOut {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }

  @keyframes l8 {
    0%,
    70%,
    100% {
      background-position:
        calc(0 * 100% / 3) 50%,
        calc(1 * 100% / 3) 50%,
        calc(2 * 100% / 3) 50%,
        calc(3 * 100% / 3) 50%;
    }
    23.33% {
      background-position:
        calc(0 * 100% / 3) 100%,
        calc(1 * 100% / 3) 66%,
        calc(2 * 100% / 3) 33%,
        calc(3 * 100% / 3) 0;
    }
    46.67% {
      background-position:
        calc(3 * 100% / 3) 100%,
        calc(2 * 100% / 3) 66%,
        calc(1 * 100% / 3) 33%,
        calc(0 * 100% / 3) 0;
    }
    69.99% {
      background-position:
        calc(3 * 100% / 3) 50%,
        calc(2 * 100% / 3) 50%,
        calc(1 * 100% / 3) 50%,
        calc(0 * 100% / 3) 50%;
    }
  }

  .project-video-media {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 2;
    border-radius: 20px;
  }

  .project-entries-container {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    position: relative;
    width: 100%;
  }

  .project-grid__container {
    position: relative;
    display: flex;
    flex-wrap: wrap;
    width: calc(100% - 2rem);
    margin: 1rem auto;
    margin-bottom: 11rem;
  }

  .project-entry {
  }
  .project-entry__wrapper {
    border-radius: 20px;
    overflow: hidden;
    flex: 1;
    box-sizing: border-box;
    flex-basis: 33.1%;
    height: 50vh;
    width: 100%;
    transition: 0.8s cubic-bezier(0.77, 0, 0.175, 1);
    position: relative;
  }

  .project-entry__double-column {
    height: 70vh;
    width: 100%;
    flex: 1 1 100%;
    border-radius: 20px;
    overflow: hidden;
    position: relative;
  }

  .project-entry__wrapper:hover {
    transition: 0.8s cubic-bezier(0.77, 0, 0.175, 1);
    min-width: none;
    flex-grow: 500;
  }

  .project-text {
    position: absolute;
    bottom: 1.5vw;
    left: 1.5vw;
    z-index: 15;
  }

  .project-titleset {
    display: block;
    color: rgba(var(--rgb-white), 1);
  }

  .titleset-services {
    padding-top: 0.5rem;
    color: rgba(var(--rgb-white), 0.5);
  }

  @media (max-width: 1280px) {
    .project-entries-container {
      gap: 0.5rem;
    }
    .project-grid__container {
      gap: 0.5rem;
      width: calc(100% - 1rem);
      margin-top: 0.5rem;
    }
  }

  .project-image-media__mobile {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: none;
  }

  @media (max-width: 992px) {
    .video-container {
      display: none;
    }
    .project-image-media__mobile {
      display: block;
      position: relative;
    }
    .project-video-media {
      display: none;
    }
    .project-entries-container {
      gap: 0.25rem;
    }
    .project-entry__wrapper {
      height: 70vw;
      border-radius: 6px;
    }
    .project-entry__double-column {
      border-radius: 6px;
      height: 25vh;
    }
    .project-video-media {
      border-radius: 6px;
    }
  }
</style>
