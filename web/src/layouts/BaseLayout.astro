---
import Nav from "../components/nav.astro";
import "../styles/global.css";
const { title, description } = Astro.props;

const SEOdescription = description ? description : "Innovative Creative Studio Specializing in Video Production. We push the boundaries of conventional taste to deliver powerful, impactful visuals."
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={SEOdescription} />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta property="og:image" content="https://i.imgur.com/Ym1QvNA.png" />
    <title>{title}</title>
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5">
    <meta name="msapplication-TileColor" content="#ffc40d">
    <meta name="theme-color" content="#ffffff">
    <link rel="icon" type="image/svg+xml" href="/woe-favicon.svg" />
  </head>
  <body>
    <main>
      <slot name="nav"/>
      <slot />
      <div class="cursor-follower" id="cursor-follower">
        <div class="cursor-inner">
          <p id="cursor-text">View Project</p>
        </div>
      </div>
    </main>
  </body>
</html>

<style is:global>
  body.nav-open {
    overflow: hidden; /* Prevent scrolling of the body when nav is open */
  }
  html.lenis,
  html.lenis body {
    height: auto;
  }

  .lenis.lenis-smooth {
    scroll-behavior: auto !important;
  }

  .lenis.lenis-smooth [data-lenis-prevent] {
    overscroll-behavior: contain;
  }

  .lenis.lenis-stopped {
    overflow: hidden;
  }

  .lenis.lenis-smooth iframe {
    pointer-events: none;
  }
  .cursor-follower {
    position: fixed;
    top: 0;
    left: 0;
    pointer-events: none;
    z-index: 9999;
    will-change: transform;
    contain: layout style size
    display: flex;
    opacity: 0;
    /* transform: scale(0); */
    /* transform-origin: 0% 0%; */
    /* mix-blend-mode: difference; */
    /* transform: translate(-50%, -50%) scale(0); */

    & .cursor-inner {
      position: absolute;
      width: 150px;
      height: 150px;
      top: -75px;
      left: -75px;
      transform: scale(0);
      background-color: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(24px);
      /* mix-blend-mode: difference; */
      border: 2px solid var(--white);
      border-radius: 50%;
      color: var(--white);
      justify-content: center;
      align-items: center;
      text-align: center;
      will-change: transform;
    }

    & p {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      display: block;
      height: 100%;
      width: 100%;
      display: grid;
      place-items: center;
    }
  }

  #gradient-canvas {
    width: 100%;
    height: 100%;
    --gradient-color-1: #ba00a7;
    --gradient-color-2: #155e89;
    --gradient-color-3: #9aeadd;
    --gradient-color-4: #00000050;
  }

  .link {
    position: relative;
    color: var(--white);
    text-decoration: none;
    display: grid;
    place-items: center;
    text-shadow: 0px 0px 2.3px #efeded;
    overflow: hidden;
    p {
      padding-bottom: 5px;
      transition: all .4s cubic-bezier(.33,1,.68,1);
      opacity: 1;
    }
  }
  .link:after {
    padding-bottom: 5px;
    content: attr(data-content);
    z-index: 10;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    color: var(--white);
    font-size: 16px;
    line-height: 135%;
    letter-spacing: -0.03rem;
    transform: translateY(100%);
    transition: all .9s cubic-bezier(.33,1,.68,1);
    font-family: 'n27-regular';
    transform-origin: center;
    opacity: 0;
  }
  .link:hover {
    &:after {
      opacity: 1;
      transform: translateY(0%);
      transition: all .3s cubic-bezier(.33,1,.68,1);
    }
    & p {
      transform: translateY(-100%);
      transition: all .4s cubic-bezier(.33,1,.68,1);
      opacity: 0;
    }
    &:before {
      transition-delay: 0.3s;
      transition: all .4s cubic-bezier(.33,1,.68,1);
    }
  }
  .link:before {
    text-shadow: 0px 0px 2.3px #efeded;
    content: "";
    position: absolute;
    bottom: 0px;
    left: 0;
    width: 100%;
    scale: 0;
    transition: all .4s cubic-bezier(.33,1,.68,1);
    transition-delay: 0.1s;
    transform-origin: left;
    border-bottom: 1px solid var(--white);
  }

  .link:hover:before {
    scale: 1;
  }

  .corner {
    z-index: 10;
    position: absolute;
    aspect-ratio: 1/1;
    width: 50px;
    height: auto;
  }
  .corner-top-left {
    top: -1px;
    left: -1px;
  }
  .corner-top-right {
    top: -1px;
    right: -1px;
    transform: rotate(90deg);
  }
  .corner-bottom-left {
    transform: rotate(-90deg);
    bottom: -1px;
    left: -1px;
  }
  .corner-bottom-right {
    transform: rotate(-180deg);
    bottom: -1px;
    right: -1px;
  }

  #cursor-text {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.3s ease;
  }

  #cursor-text svg {
    position: absolute;
    width: 20px;
    height: 17px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    transition: transform 0.3s ease;
  }

  #cursor-text.rotate-svg svg {
    transform: translate(-50%, -50%) rotate(180deg);
  }

  @media (max-width: 576px) {
    .corner {
      width: 20px;
    }
    .link:after {
      display: none;
    }
    .link {
      display: inline-block;
    }
  }
</style>

<!-- <script src="../components/utils/cursor.js"></script> -->

<script>
  import Cursor from "../components/utils/cursor";
  import Lenis from "lenis";

  let lenis 
  
  if (window.innerWidth > 992) {
    if (!navigator.userAgent.includes('Macintosh')) {

      lenis = new Lenis({
        lerp: 0.15,
      wheelMultiplier: 1,
      smoothWheel: true,
    });
  }
    new Cursor(document.querySelector(".cursor-follower"));
  }

  function raf(time) {
    lenis.raf(time);
    requestAnimationFrame(raf);
  }

  requestAnimationFrame(raf);

  // lenis.on("scroll", (e) => {
  //   // Handle scroll events if needed
  // });
</script>
